datadog:
  apiKeyExistingSecret: datadog-secret
  pipelineId: "7cf9d82a-436c-11ee-b502-da7ad0900002"
  site: "datadoghq.com"
resources:
  requests:
    cpu: 1000m
    memory: 512Mi
service:
  enabled: true
  type: "LoadBalancer"
  loadBalancerIP: 10.0.0.209
  ipFamilies:	
    - IPv4	
persistence:
  enabled: true
  storageClassName: "local-storage"
  accessModes:
    - ReadWriteOnce
  size: 10Gi
env:
  - name: NR_KEY
    valueFrom:
      secretKeyRef:
        key: nr_key
        name: opw-secrets
  - name: NR_ID
    valueFrom:
      secretKeyRef:
        key: nr_account_id
        name: opw-secrets
pipelineConfig:
  sinks:
    datadog_logs:
      buffer:
        max_size: 4294967296
        type: disk
      compression: gzip
      default_api_key: ${DD_API_KEY}
      inputs:
        - logs_finish_ddtags
      site: ${DD_SITE}
      type: datadog_logs
    datadog_metrics:
      buffer:
        max_size: 4294967296
        type: disk
      default_api_key: ${DD_API_KEY}
      inputs:
        - metrics_add_dd_tags
      site: ${DD_SITE}
      type: datadog_metrics
    nr_logs:
      account_id: \"${NR_ID}\"
      api: logs
      buffer:
        max_size: 4294967296
        type: disk
      healthcheck:
        enabled: true
      inputs:
        - remap_event_to_message
      license_key: ${NR_KEY}
      region: us
      type: new_relic
  sources:
    datadog_agent:
      address: 0.0.0.0:8282
      multiple_outputs: true
      type: datadog_agent
  transforms:
    logs_enrich:
      inputs:
        - logs_remove_wrong_level
      source: |
        .ddtags.sender = "observability_pipelines_worker"
        .ddtags.opw_aggregator = get_hostname!()
      type: remap
    logs_finish_ddtags:
      inputs:
        - remap_event_to_message
      source: >
        .ddtags = encode_key_value!(.ddtags, key_value_delimiter: ":",
        field_delimiter: ",")
      type: remap
    logs_parse_ddtags:
      inputs:
        - datadog_agent.logs
      source: >
        .ddtags = parse_key_value!(.ddtags, key_value_delimiter: ":",
        field_delimiter: ",")
      type: remap
    logs_remove_wrong_level:
      inputs:
        - logs_parse_ddtags
      source: |
        del(.status)
      type: remap
    metrics_add_dd_tags:
      inputs:
        - datadog_agent.metrics
      source: |
        .tags.sender = "observability_pipelines_worker"
        .tags.opw_aggregator = get_hostname!()
      type: remap
    remap_event_to_message:
      inputs:
        - logs_enrich
      source: |-
        if !exists(.message) && exists(.event){
          .message = del(.event)
        }
      type: remap
